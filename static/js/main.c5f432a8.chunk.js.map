{"version":3,"sources":["api.ts","context/MovieContext.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","components/MoviesApp/MoviesApp.tsx","App.tsx","index.tsx"],"names":["API_URL","concat","MovieContext","createContext","movies","searchField","updateSearch","onSearchMovie","findMovie","findMovieError","findMovieLoading","onAddMovie","onResetData","MovieProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setFindMovie","_useState5","_useState6","setFindMovieLoading","_useState7","_useState8","setFindMovieError","_useState9","_useState10","setSearchField","term","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responce","currentMovie","imgUrl","imdbUrl","wrap","_context","prev","next","query","fetch","then","res","json","catch","Response","Error","sent","hasOwnProperty","abrupt","Poster","imdbID","title","Title","description","Plot","imdbId","t0","finish","stop","_x","apply","arguments","movie","_toConsumableArray","value","useMemo","_jsx","Provider","MovieCard","_jsxs","className","src","alt","href","MoviesList","map","FindMovie","_useContext","useContext","disabled","length","_Fragment","htmlFor","type","id","placeholder","classNames","input","onChange","event","target","onClick","preventDefault","onFindMovie","some","MoviesApp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5f432a8.chunk.js","sourcesContent":["import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '1b11639d';\n\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { createContext, useMemo, useState } from 'react';\n\nimport { Context } from '../types/MovieContext';\nimport { Movie } from '../types/Movie';\nimport { getMovie } from '../api';\nimport { MovieData } from '../types/MovieData';\n\nexport const MovieContext = createContext<Context>({\n  movies: [],\n  searchField: '',\n  updateSearch: () => {},\n  onSearchMovie: () => {},\n  findMovie: null,\n  findMovieError: false,\n  findMovieLoading: false,\n  onAddMovie: () => {},\n  onResetData: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MovieProvider: React.FC<Props> = ({ children }) => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [findMovie, setFindMovie] = useState<Movie | null>(null);\n  const [findMovieLoading, setFindMovieLoading] = useState(false);\n  const [findMovieError, setFindMovieError] = useState(false);\n  const [searchField, setSearchField] = useState('');\n\n  const updateSearch = (term: string) => {\n    setFindMovieError(false);\n    setSearchField(term);\n  };\n\n  const onSearchMovie = async (term: string) => {\n    setFindMovieLoading(true);\n    try {\n      const responce = await getMovie(term);\n\n      // eslint-disable-next-line no-prototype-builtins\n      if (responce.hasOwnProperty('Error')) {\n        setFindMovieError(true);\n        setSearchField('');\n\n        return;\n      }\n\n      const currentMovie = responce as MovieData;\n      const defaultImg\n        = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n      // eslint-disable-next-line max-len\n      const imgUrl = currentMovie.Poster !== 'N/A' ? currentMovie.Poster : defaultImg;\n      const imdbUrl = `https://www.imdb.com/title/${currentMovie.imdbID}`;\n\n      setFindMovie({\n        title: currentMovie.Title,\n        description: currentMovie.Plot,\n        imdbUrl,\n        imgUrl,\n        imdbId: currentMovie.imdbID,\n      });\n    } catch {\n      setFindMovieError(true);\n    } finally {\n      setFindMovieLoading(false);\n    }\n  };\n\n  const onResetData = () => {\n    setSearchField('');\n    setFindMovie(null);\n  };\n\n  const onAddMovie = (movie: Movie) => {\n    setMovies((prev) => [...prev, movie]);\n    onResetData();\n  };\n\n  const value = useMemo(\n    () => ({\n      movies,\n      searchField,\n      updateSearch,\n      onSearchMovie,\n      findMovieLoading,\n      findMovieError,\n      findMovie,\n      onAddMovie,\n      onResetData,\n    }),\n    [movies, searchField, findMovie, findMovieError, findMovieLoading],\n  );\n\n  return (\n    <MovieContext.Provider value={value}>{children}</MovieContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useContext } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieContext } from '../../context/MovieContext';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\nexport const FindMovie: React.FC = () => {\n  const {\n    searchField,\n    updateSearch,\n    onSearchMovie,\n    findMovie,\n    findMovieError,\n    findMovieLoading,\n    onAddMovie,\n    movies,\n    onResetData,\n  } = useContext(MovieContext);\n\n  const disabled = searchField.length === 0;\n\n  const onFindMovie = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    onSearchMovie(searchField);\n  };\n\n  const updateMovieList = (currentMovie: Movie) => {\n    const isSomeExist = movies.some(\n      (movie) => movie.imdbId === findMovie?.imdbId,\n    );\n\n    if (!isSomeExist) {\n      onAddMovie(currentMovie);\n    }\n\n    onResetData();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                input: true,\n                'is-danger': findMovieError,\n              })}\n              value={searchField}\n              onChange={(event) => updateSearch(event.target.value)}\n            />\n          </div>\n\n          {findMovieError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames({\n                'button is-light': !findMovieLoading,\n                'button is-loading': findMovieLoading,\n              })}\n              disabled={disabled}\n              onClick={(event) => onFindMovie(event)}\n            >\n              {`${findMovie ? 'Search again' : 'Find a movie'}`}\n            </button>\n          </div>\n\n          {findMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => updateMovieList(findMovie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {findMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={findMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { MoviesList } from '../MoviesList';\nimport { FindMovie } from '../FindMovie';\nimport { MovieContext } from '../../context/MovieContext';\n\nexport const MoviesApp: React.FC = () => {\n  const { movies } = useContext(MovieContext);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie />\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { MovieProvider } from './context/MovieContext';\nimport { MoviesApp } from './components/MoviesApp';\n\nexport const App = () => {\n  return (\n    <MovieProvider>\n      <MoviesApp />\n    </MovieProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}